import { KEYS } from "./keys";

// We inline font-awesome icons in order to save on js size rather than including the font awesome react library
export const SHAPES = [
  {
    icon: (
      // fa-mouse-pointer
      <svg viewBox="0 0 24 24">
        <path
          fillRule="evenodd"
          d="M4.53182 2.27732C4.5429 2.2813 4.55397 2.28528 4.56503 2.28925L20.3072 7.94029C20.5842 8.03969 20.8499 8.13502 21.0546 8.22911C21.2275 8.30859 21.6058 8.48935 21.8197 8.88237C22.0535 9.31212 22.0603 9.82957 21.8378 10.2653C21.6343 10.6638 21.2609 10.8544 21.0901 10.9384C20.888 11.0379 20.6249 11.1401 20.3506 11.2468L13.7958 13.7958L11.2467 20.3506C11.1401 20.6249 11.0378 20.888 10.9384 21.0901C10.8544 21.2609 10.6638 21.6343 10.2653 21.8378C9.82954 22.0603 9.31209 22.0535 8.88234 21.8197C8.48932 21.6058 8.30856 21.2275 8.22907 21.0546C8.13498 20.8499 8.03965 20.5842 7.94025 20.3072L2.28924 4.56503C2.28528 4.55397 2.2813 4.5429 2.27732 4.53182C2.19732 4.30909 2.11615 4.08311 2.06656 3.89231C2.01952 3.7113 1.94153 3.36184 2.07129 2.98716C2.22004 2.55761 2.55762 2.22004 2.98717 2.07128C3.36185 1.94153 3.7113 2.01952 3.89232 2.06656C4.08312 2.11615 4.3091 2.19732 4.53182 2.27732ZM4.29156 4.29155L9.60955 19.106L11.9848 12.9982C11.9874 12.9915 11.9904 12.9836 11.9938 12.9748C12.0265 12.8888 12.0941 12.7111 12.2069 12.553C12.3023 12.4193 12.4192 12.3023 12.553 12.2069C12.7111 12.0941 12.8888 12.0265 12.9748 11.9938C12.9836 11.9905 12.9914 11.9875 12.9982 11.9848L19.106 9.60957L4.29156 4.29155Z"
        />
      </svg>
    ),
    value: "selection",
    key: KEYS.V,
  },
  {
    icon: (
      // fa-square
      <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          d="M7 5H17C18.1046 5 19 5.89543 19 7V17C19 18.1046 18.1046 19 17 19H7C5.89543 19 5 18.1046 5 17V7C5 5.89543 5.89543 5 7 5ZM3 7C3 4.79086 4.79086 3 7 3H17C19.2091 3 21 4.79086 21 7V17C21 19.2091 19.2091 21 17 21H7C4.79086 21 3 19.2091 3 17V7Z"
        />
      </svg>
    ),
    value: "rectangle",
    key: KEYS.R,
  },
  {
    icon: (
      // custom
      <svg viewBox="0 0 24 24">
        <path d="M10.3951 3.82744C11.1862 2.72419 12.8138 2.72419 13.6049 3.82744L18.6234 10.8263C19.1255 11.5266 19.1255 12.4734 18.6234 13.1737L13.6049 20.1726C12.8138 21.2758 11.1862 21.2758 10.3951 20.1726L5.3766 13.1737C4.87447 12.4734 4.87447 11.5266 5.3766 10.8263L10.3951 3.82744ZM12 5.00112L6.9815 12L12 18.9989L17.0185 12L12 5.00112Z" />
      </svg>
    ),
    value: "diamond",
    key: KEYS.D,
  },
  {
    icon: (
      // fa-circle
      <svg viewBox="0 0 24 24">
        <path
          fillRule="evenodd"
          d="M20 12C20 16.4183 16.4183 20 12 20C7.58172 20 4 16.4183 4 12C4 7.58172 7.58172 4 12 4C16.4183 4 20 7.58172 20 12ZM22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z"
        />
      </svg>
    ),
    value: "ellipse",
    key: KEYS.O,
  },
  {
    icon: (
      // fa-long-arrow-alt-right
      <svg viewBox="0 0 24 24">
        <path
          fillRule="evenodd"
          d="M13.0004 7.00357L15.5826 7.00357L5.29289 17.2933C4.90237 17.6838 4.90237 18.317 5.29289 18.7075C5.68342 19.098 6.31658 19.098 6.70711 18.7075L17.0004 8.41421V11.0036C17.0004 11.5559 17.4481 12.0036 18.0004 12.0036C18.5527 12.0036 19.0004 11.5559 19.0004 11.0036V6.00357L19.0004 6.00185C19.0009 5.74531 18.9032 5.48863 18.7075 5.29289C18.4907 5.07607 18.1991 4.97963 17.9157 5.00357L13.0004 5.00357C12.4481 5.00357 12.0004 5.45129 12.0004 6.00357C12.0004 6.55586 12.4481 7.00357 13.0004 7.00357Z"
        />
      </svg>
    ),
    value: "arrow",
    key: KEYS.A,
  },
  {
    icon: (
      // custom
      <svg viewBox="0 0 24 24">
        <path
          fillRule="evenodd"
          d="M5.39161 17.1872C4.92629 17.6525 4.86722 18.3478 5.25969 18.7403C5.65215 19.1328 6.34752 19.0737 6.81284 18.6084L18.6084 6.81284C19.0737 6.34752 19.1328 5.65215 18.7403 5.25969C18.3479 4.86722 17.6525 4.92629 17.1872 5.39161L5.39161 17.1872Z"
        />
      </svg>
    ),
    value: "line",
    key: [KEYS.P, KEYS.L],
  },
  {
    icon: (
      // fa-pencil
      <svg viewBox="0 0 24 24">
        <path
          fillRule="evenodd"
          d="M15.399 3.13256C16.909 1.62248 19.3574 1.62248 20.8674 3.13256C22.3775 4.64263 22.3775 7.09095 20.8674 8.60103L9.61215 19.8563C8.90715 20.5613 8.00925 21.0419 7.03159 21.2374L3.32953 21.9778C2.55213 22.1333 1.86671 21.4479 2.02219 20.6705L2.7626 16.9684C2.95814 15.9908 3.43868 15.0928 4.14368 14.3879L15.399 3.13256ZM19.4391 4.56094C18.7179 3.83974 17.5486 3.83974 16.8274 4.56094L14.5115 6.87681L17.1232 9.48851L19.4391 7.17264C20.1603 6.45144 20.1603 5.28214 19.4391 4.56094ZM15.6948 10.9169L13.0831 8.3052L5.57206 15.8162C5.14906 16.2392 4.86074 16.778 4.74342 17.3646L4.27042 19.7296L6.63543 19.2566C7.22202 19.1393 7.76076 18.8509 8.18376 18.4279L15.6948 10.9169Z"
        />
      </svg>
    ),
    value: "freedraw",
    key: [KEYS.X, KEYS.P.toUpperCase()],
  },
  {
    icon: (
      // fa-font
      <svg viewBox="0 0 24 24">
        <path d="M5 5C5 4.44772 5.44772 4 6 4H18C18.5523 4 19 4.44772 19 5C19 5.55228 18.5523 6 18 6H13V19C13 19.5523 12.5523 20 12 20C11.4477 20 11 19.5523 11 19V6H6C5.44772 6 5 5.55228 5 5Z" />
      </svg>
    ),
    value: "text",
    key: KEYS.T,
  },
  {
    icon: (
      // fa-image
      <svg viewBox="0 0 24 24">
        <path
          fillRule="evenodd"
          d="M18 4H6C4.89543 4 4 4.89543 4 6V18C4 18.8016 4.47158 19.493 5.15245 19.8121L12.4518 12.4849C14.4089 10.5204 17.5908 10.5237 19.5437 12.4922L20 12.9522V6C20 4.89543 19.1046 4 18 4ZM20 15.792L18.1238 13.9008C16.9521 12.7197 15.043 12.7177 13.8687 13.8964L7.78828 20H18C19.1046 20 20 19.1046 20 18V15.792ZM6 2C3.79086 2 2 3.79086 2 6V18C2 20.2091 3.79086 22 6 22H18C20.2091 22 22 20.2091 22 18V6C22 3.79086 20.2091 2 18 2H6ZM9 10C9.55228 10 10 9.55228 10 9C10 8.44772 9.55228 8 9 8C8.44772 8 8 8.44772 8 9C8 9.55228 8.44772 10 9 10ZM9 12C10.6569 12 12 10.6569 12 9C12 7.34315 10.6569 6 9 6C7.34315 6 6 7.34315 6 9C6 10.6569 7.34315 12 9 12Z"
        />
      </svg>
    ),
    value: "image",
    key: null,
  },
] as const;

export const findShapeByKey = (key: string) => {
  const shape = SHAPES.find((shape, index) => {
    return (
      key === (index + 1).toString() ||
      (shape.key &&
        (typeof shape.key === "string"
          ? shape.key === key
          : (shape.key as readonly string[]).includes(key)))
    );
  });
  return shape?.value || null;
};
